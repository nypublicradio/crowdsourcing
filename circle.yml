deploy_steps: &deploy_steps
  working_directory: ~/crowdsourcing
  docker:
    - image: circleci/python:3.6
  steps:
    - checkout
    - setup_remote_docker
    - restore_cache:
        key: d-{{ checksum "setup.py" }}
    - run:
        name: Deploy
        command: |
          TAG=${CIRCLE_TAG:-demo}
          . ~/.venv/bin/activate
          python setup.py deploy --environment=$ENV \
                                 --tag=$TAG \
                                 --ecs-cluster=microservices \
                                 --ecr-repository=crowdsourcing \
                                 --wait=300

deploy_static_steps: &deploy_static_steps
  working_directory: ~/crowdsourcing
  docker:
    - image: circleci/python:3.6
  steps:
    - checkout
    - restore_cache:
        key: d-{{ checksum "setup.py" }}
    - run:
        name: Deploy Static
        command: |
          TAG=${CIRCLE_TAG:-demo}
          . ~/.venv/bin/activate
          pip install -e .
          set -o allexport
          env | grep "^${ENV}_" | sed "s/${ENV}_//g" > .env && source .env
          manage.py collectstatic --no-input
          set +o allexport

version: 2
jobs:

  test:
    working_directory: ~/crowdsourcing
    docker:
      - image: circleci/python:3.6
      - image: postgres
        name: db
    steps:
      - checkout
      - restore_cache:
          key: d-{{ checksum "setup.py" }}
      - run:
          name: Install Requirements
          command: |
            if [[ ! -d ~/.venv ]]; then
              python -m venv ~/.venv
              . ~/.venv/bin/activate
              pip install -e .
              python setup.py test_requirements
            fi
      - run:
          name: Test
          command: |
            . ~/.venv/bin/activate
            python setup.py test
      - save_cache:
          key: d-{{ checksum "setup.py" }}
          paths:
            - ~/.venv
            - ~/.eggs
            - ~/crowdsourcing/crowdsourcing.egg-info

  deploy_prod:
    <<: *deploy_steps
    environment:
      ENV: prod

  deploy_demo:
    <<: *deploy_steps
    environment:
      ENV: demo

  deploy_static_prod:
    <<: *deploy_static_steps
    environment:
      ENV: prod

  deploy_static_demo:
    <<: *deploy_static_steps
    environment:
      ENV: demo

workflows:
  version: 2
  just-test:
    jobs:
      - test:
          filters:
            tags:
              only: /.*/
  deploy-demo:
    jobs:
      - test:
          filters:
            branches:
              only: master
      - deploy_demo:
          requires:
            - test
      - deploy_static_demo:
          requires:
            - test
  deploy-prod:
    jobs:
      - test:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v[0-9]+\.[0-9]+\.[0-9]+/
      - deploy_prod:
          requires:
            - test
      - deploy_static_prod:
          requires:
            - test
